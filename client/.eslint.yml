extends:
  [
    "plugin:react-hooks/recommended",
    "airbnb-typescript-prettier",
    "plugin:json/recommended",
  ]
parserOptions:
  project: "./tsconfig.json"
ignorePatterns:
  - "src/features/settings.json"
rules:
  quotes: ["error", "double"]
  import/no-cycle: off
  no-param-reassign: off
  "@typescript-eslint/no-use-before-define": off
  "@typescript-eslint/no-unused-vars": ["warn"]
  import/extensions: off
  camelcase: "warn"
  padding-line-between-statements:
    - 2
    - blankLine: never
      prev: "*"
      next: "*"
    - blankLine: always
      prev:
        - "export"
        - "const"
        - "function"
      next: "*"
    - blankLine: always
      prev: "import"
      next: "const"
    - blankLine: never
      prev: "singleline-const"
      next: "singleline-const"
# npx create-react-app --template redux-typescript --use-npm .
# patch -p1 -ud .  < ../template/react-typescript/eslint-and-script.patch
# npm i -D eslint eslint-config-airbnb-typescript-prettier eslint-plugin-json prettier

###App.tsx
#import React, { ReactElement } from "react";
#import Counter from "./features/counter/Counter";
#const App: React.FC=() :ReactElement=>{

###Counter.tsx
#import React, { useState, ReactElement } from 'react';
#const Counter: React.FC = (): ReactElement => {
#button type="button"
#export default Counter;

###serviceWOrker.ts
#// eslint-disable-next-line no-console
# export function register(config?: Config): void {
# export function unregister() :void{

###counterSlice.ts
#export const selectCount = (state: RootState): number => state.counter.value;

# "scripts": {
#   "start": "react-scripts start",
#   "build": "react-scripts build",
#   "lint:check": "eslint 'src/**/*.{js,jsx,json,ts,tsx}'",
#   "lint:write": "eslint 'src/**/*.{js,jsx,json,ts,tsx}' --fix",
#   "prettier:check": "prettier --check 'src/**/*.{js,jsx,json,ts,tsx}'",
#   "prettier:write": "prettier --write 'src/**/*.{js,jsx,json,ts,tsx}'",
#   "test": "react-scripts test",
#   "eject": "react-scripts eject"
# },
